{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Name."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "Virtual Machine Size."
      }
    },
    "vmTag": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine Tag Value."
      }
    },
    "vmNotes": {
      "type": "string",
      "metadata": {
        "description": "Virtual Machine 'Notes' Tag Value."
      }
    },
    "avSet": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "Virtual Machine Availability Set."
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Virtual Network Name."
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet Name."
      }
    },
    "storageAccountName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Unique DNS Name for the Storage Account where the Virtual Machine's disks will be placed."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "The Windows image publisher."
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "The Windows image offer."
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "2012-R2-Datacenter",
      "metadata": {
        "description": "The Windows image name."
      }
    }
  },
  "variables": {
    "adminUsername": "AzAdmin",
    "EnvironmentTag": "Msdn",
    "publicIpName": "[concat(parameters('vmName'),'_pubip')]",
    "location": "[resourceGroup().location]",
    "OSDiskName": "[concat(parameters('vmName'),'_osdisk')]",
    "nicName": "[concat(parameters('vmName'),'_vnic')]",
    "vmStorageAccountContainerName": "vhds",
    "vmPowerOnTime": "05:00",
    "vmPowerOffTime": "18:00",
    "storageDiag": "prodstorediagnos001lrs",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',parameters('subnetName'))]",
    "ps1File": "https://prodinfrastg001lrsmsd.blob.core.windows.net/setup/VmCusScrExt.ps1",
    "ps1Name": "VmCusScrExt.ps1",
    "apiVersion": "2015-06-15"
  },
  "resources": [
    {
      "comments": "VM's Network Adapter",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "tags": { "Environment": "[variables('EnvironmentTag')]" },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIpName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "comments": "VM's Public IP address",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "comments": "VM",
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[variables('location')]",
      "tags": {
        "Environment": "[variables('EnvironmentTag')]",
        "Project": "[parameters('vmTag')]",
        "Notes": "[parameters('vmNotes')]",
        "PowerOn": "[variables('vmPowerOnTime')]",
        "PowerOff": "[variables('vmPowerOffTime')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "availabilitySet": {  
          "id":"[resourceId('Microsoft.Compute/availabilitySets',parameters('avSet'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[parameters('vmName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[variables('OSDiskName')]",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('storageDiag'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "comments": "Extension - BGInfo",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/BGInfo')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "BGInfo",
        "typeHandlerVersion": "2.1",
        "settings": {
          "Properties": [
          ]
        }
      }
    },
    {
      "comments": "Extension - PowerShell script",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),'/CustomScriptExtension')]",
      "apiVersion": "[variables('apiVersion')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.8",
        "settings": {
          "fileUris": [ "[variables('ps1File')]" ],
          "commandToExecute": "[concat('powershell -ExecutionPolicy Bypass -File ',variables('ps1Name'))]"
        }
      }
    }
  ]
}
